#include 'protheus.ch'
#include 'parmtype.ch'

user function qryMovtoKdx(cOpc, aParam)
    local cQry := ""
    if cOpc == 'P'
        cQry := qryProduto(aParam[01], aParam[02])
    elseif cOpc == 'O'
        cQry := qryOp(aParam[01], aParam[02], aParam[03])
    elseif cOpc == 'D'
        cQry := qryDetalhe(aParam[01], aParam[02], aParam[03])
    endif
return(cQry)

static function qryProduto(cDtIni, cDtFim)
    local cQry := ""

    cQry += " SELECT TAB.FILIAL AS [FILIAL], "
    cQry += " TAB.PRODUTO AS [PRODUTO], "
    cQry += " SUM(TAB.PROD_EST + TAB.PROD_MAN + TAB.PROD_UNDO) AS [PROD], "
    cQry += " SUM(TAB.REQ_EST + TAB.REQ_MAN + TAB.REQ_UNDO) AS [REQ], "
    cQry += " SUM(TAB.PROD_EST) AS [PROD_EST], "
    cQry += " SUM(TAB.REQ_EST) AS [REQ_EST], "
    cQry += " CASE  "
    cQry += " 	WHEN SUM(TAB.PROD_EST) > 0 "
    cQry += " 		THEN ROUND((SUM(TAB.REQ_EST) / SUM(TAB.PROD_EST)),4) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [FATOR_PLAN], "
    cQry += " SUM(TAB.PROD_MAN) AS [PROD_MAN], "
    cQry += " SUM(TAB.REQ_MAN) AS [REQ_MAN], "
    cQry += " SUM(TAB.PROD_UNDO) AS [PROD_UNDO], "
    cQry += " SUM(TAB.REQ_UNDO) AS [REQ_UNDO], "
    cQry += " CASE  "
    cQry += " 	WHEN SUM(TAB.PROD_EST + TAB.PROD_MAN) > 0 "
    cQry += " 		THEN ROUND((SUM(TAB.REQ_EST + TAB.REQ_MAN) / SUM(TAB.PROD_EST + TAB.PROD_MAN)),4) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [FATOR_EXEC], "
    cQry += " ISNULL(STAB.MIN_COBRE,0) AS [EST_MIN], "
    cQry += " ISNULL(STAB.MED_COBRE,0) AS [EST_MED], "
    cQry += " ISNULL(STAB.MAX_COBRE,0) AS [EST_MAX], "
    cQry += " TSB1.B1_PESCOB AS [CAD_FAT] "
    cQry += " FROM( "
    cQry += " SELECT TEMP.FILIAL AS [FILIAL], "
    cQry += " TEMP.OP AS [OP], "
    cQry += " TEMP.PROD_OP AS [PRODUTO], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID <> 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PROD_EST], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID = 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PROD_MAN], "
    cQry += " SUM(TEMP.UNDO_COBRE) AS [PROD_UNDO], "
    cQry += " 0 AS [REQ_EST], "
    cQry += " 0 AS [REQ_MAN], "
    cQry += " 0 AS [REQ_UNDO] "
    cQry += " FROM ( "
    cQry += " SELECT MOVUSER.IDCostCenter AS [FILIAL], "
    cQry += " MOVWO.Code AS [OP], "
    cQry += " OPPROD.Code AS [PROD_OP], "
    cQry += " CASE "
    cQry += " 	WHEN MOVTYPE.Code IN ('PR0') "
    cQry += " 		THEN MOVEV.IDLot "
    cQry += " 	WHEN MOVEV.TraceIDLot IS NOT NULL "
    cQry += " 		THEN MOVEV.TraceIDLot "
    cQry += " 	ELSE 0 "
    cQry += " END AS [ID], "
    cQry += " MOVPROD.Code AS [PROD], "
    cQry += " MOVTYPE.Code AS [MOV], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PVC], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.IDMovUn IS NOT NULL "
    cQry += " 		THEN MOVEV.IDMovUn "
    cQry += " 	ELSE ISNULL(( "
    cQry += " 			SELECT SMOVEV.IDMovUn "
    cQry += " 			FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SMOVEV "
    cQry += " 			INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType SMOVTYPE ON SMOVEV.IDMovType = SMOVTYPE.IDMovType "
    cQry += " 			WHERE SMOVEV.IDLot = MOVEV.IDLot "
    cQry += " 			AND SMOVTYPE.Code IN ('PR0','PR1','DE0','DE3') "
    cQry += " 			AND SMOVEV.IDMovUn IN ( "
    cQry += " 									SELECT MAX(SSMOVEV.IDMovUn) "
    cQry += " 									FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SSMOVEV "
    cQry += " 									WHERE SSMOVEV.IDLot = SMOVEV.IDLot "
    cQry += " 									AND SSMOVEV.TraceIDLot = MOVEV.TraceIDLot "
    cQry += " 									AND SSMOVEV.IDMovUn IS NOT NULL "
    cQry += " 									AND SSMOVEV.MovQty = MOVEV.MovQty "
    cQry += " 									AND RTRIM(LTRIM(SSMOVEV.AuxField1)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(MOVEV.AuxField1)) COLLATE Latin1_General_BIN "
    cQry += "  "
    cQry += " 			) "
    cQry += " 	),0) "
    cQry += " END AS [UNMOV],  "
    cQry += " MOVUSER.Name AS [USUARIO], "
    cQry += " MOVEV.UndoIDMovEv AS [UNDO], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " END AS [UNDO_QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " END AS [UNDO_COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " END AS [UNDO_PVC], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,112) AS [EMISSAO], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,108) AS [HREMISSAO] "
    cQry += " FROM [PCF_PROD].PCFactory.dbo.TBLMovEv MOVEV "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType MOVTYPE ON MOVEV.IDMovType = MOVTYPE.IDMovType "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLUser MOVUSER ON MOVEV.IDUser = MOVUSER.IDUser "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct MOVPROD ON MOVEV.IDProduct = MOVPROD.IDProduct "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLWOHD MOVWO ON MOVEV.IDWOHD = MOVWO.IDWOHD "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct OPPROD ON MOVWO.IDProduct = OPPROD.IDProduct "
    cQry += " LEFT JOIN  [PCF_PROD].PCFactory.dbo.TBLLot MOVLOT ON MOVEV.TraceIDLot = MOVLOT.IDLot "
    cQry += " INNER JOIN SB1010 SB1 WITH(NOLOCK) ON RTRIM(LTRIM(MOVPROD.Code)) = RTRIM(LTRIM(SB1.B1_COD)) COLLATE Latin1_General_BIN  AND '' = SB1.D_E_L_E_T_ "
    cQry += " WHERE Convert(nvarchar,MOVEV.DtTimeStamp,112) BETWEEN '" + cDtIni + "' AND '" + cDtFim + "' "
    cQry += " AND MOVUSER.IDCostCenter = " + CValToChar(Val(FwFilial()))
    cQry += " AND MOVTYPE.Code IN ('PR0','PR1') "
    cQry += " ) AS TEMP "
    cQry += " GROUP BY TEMP.FILIAL, TEMP.OP, TEMP.PROD_OP, TEMP.ID "
    cQry += " UNION ALL "
    cQry += " SELECT TEMP.FILIAL AS [FILIAL], "
    cQry += " TEMP.OP AS [OP], "
    cQry += " TEMP.PROD_OP AS [PRODUTO], "
    cQry += " 0 AS [PROD_EST], "
    cQry += " 0 AS [PROD_MAN], "
    cQry += " 0 AS [PROD_UNDO], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID <> 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [REQ_EST], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID = 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [REQ_MAN], "
    cQry += " SUM(TEMP.UNDO_COBRE) AS [REQ_UNDO] "
    cQry += " FROM ( "
    cQry += " SELECT MOVUSER.IDCostCenter AS [FILIAL], "
    cQry += " MOVWO.Code AS [OP], "
    cQry += " OPPROD.Code AS [PROD_OP], "
    cQry += " CASE "
    cQry += " 	WHEN MOVTYPE.Code IN ('PR0') "
    cQry += " 		THEN MOVEV.IDLot "
    cQry += " 	WHEN MOVEV.TraceIDLot IS NOT NULL "
    cQry += " 		THEN MOVEV.TraceIDLot "
    cQry += " 	ELSE 0 "
    cQry += " END AS [ID], "
    cQry += " MOVPROD.Code AS [PROD], "
    cQry += " MOVTYPE.Code AS [MOV], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PVC], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.IDMovUn IS NOT NULL "
    cQry += " 		THEN MOVEV.IDMovUn "
    cQry += " 	ELSE ISNULL(( "
    cQry += " 			SELECT SMOVEV.IDMovUn "
    cQry += " 			FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SMOVEV "
    cQry += " 			INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType SMOVTYPE ON SMOVEV.IDMovType = SMOVTYPE.IDMovType "
    cQry += " 			WHERE SMOVEV.IDLot = MOVEV.IDLot "
    cQry += " 			AND SMOVTYPE.Code IN ('PR0','PR1','DE0','DE3') "
    cQry += " 			AND SMOVEV.IDMovUn IN ( "
    cQry += " 									SELECT MAX(SSMOVEV.IDMovUn) "
    cQry += " 									FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SSMOVEV "
    cQry += " 									WHERE SSMOVEV.IDLot = SMOVEV.IDLot "
    cQry += " 									AND SSMOVEV.TraceIDLot = MOVEV.TraceIDLot "
    cQry += " 									AND SSMOVEV.IDMovUn IS NOT NULL "
    cQry += " 									AND SSMOVEV.MovQty = MOVEV.MovQty "
    cQry += " 									AND RTRIM(LTRIM(SSMOVEV.AuxField1)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(MOVEV.AuxField1)) COLLATE Latin1_General_BIN "
    cQry += "  "
    cQry += " 			) "
    cQry += " 	),0) "
    cQry += " END AS [UNMOV],  "
    cQry += " MOVUSER.Name AS [USUARIO], "
    cQry += " MOVEV.UndoIDMovEv AS [UNDO], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " END AS [UNDO_QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " END AS [UNDO_COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " END AS [UNDO_PVC], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,112) AS [EMISSAO], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,108) AS [HREMISSAO] "
    cQry += " FROM [PCF_PROD].PCFactory.dbo.TBLMovEv MOVEV "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType MOVTYPE ON MOVEV.IDMovType = MOVTYPE.IDMovType "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLUser MOVUSER ON MOVEV.IDUser = MOVUSER.IDUser "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct MOVPROD ON MOVEV.IDProduct = MOVPROD.IDProduct "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLWOHD MOVWO ON MOVEV.IDWOHD = MOVWO.IDWOHD "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct OPPROD ON MOVWO.IDProduct = OPPROD.IDProduct "
    cQry += " LEFT JOIN  [PCF_PROD].PCFactory.dbo.TBLLot MOVLOT ON MOVEV.TraceIDLot = MOVLOT.IDLot "
    cQry += " INNER JOIN SB1010 SB1 WITH(NOLOCK) ON RTRIM(LTRIM(MOVPROD.Code)) = RTRIM(LTRIM(SB1.B1_COD)) COLLATE Latin1_General_BIN  AND '' = SB1.D_E_L_E_T_ "
    cQry += " WHERE Convert(nvarchar,MOVEV.DtTimeStamp,112) BETWEEN '" + cDtIni + "' AND '" + cDtFim + "' "
    cQry += " AND MOVUSER.IDCostCenter = " + CValToChar(Val(FwFilial()))
    cQry += " AND MOVTYPE.Code IN ('RE0','RE1') "
    cQry += " ) AS TEMP "
    cQry += " GROUP BY TEMP.FILIAL, TEMP.OP, TEMP.PROD_OP, TEMP.ID "
    cQry += " ) AS TAB "
    cQry += " LEFT JOIN ( "
    cQry += " SELECT  "
    cQry += " TEMP.COD AS [COD], "
    cQry += " MIN(TEMP.COBRE) AS [MIN_COBRE], "
    cQry += " AVG(TEMP.COBRE) AS [MED_COBRE], "
    cQry += " MAX(TEMP.COBRE) AS [MAX_COBRE], "
    cQry += " MIN(TEMP.PVC) AS [MIN_PVC], "
    cQry += " AVG(TEMP.PVC) AS [MED_PVC], "
    cQry += " MAX(TEMP.PVC) AS [MAX_PVC] "
    cQry += " FROM ( "
    cQry += " SELECT  "
    cQry += " SSTAB.COD AS [COD], "
    cQry += " CASE "
    cQry += " 	WHEN SSTAB.PADRAO = 'S' "
    cQry += " 		THEN '01' + SSTAB.OPC "
    cQry += " 	ELSE '99' + SSTAB.OPC "
    cQry += " END AS [ORDEM], "
    cQry += " CAST(SUM(SSTAB.QTD) AS DECIMAL(10,8)) AS [QTD], "
    cQry += " CAST(SUM(SSTAB.COBRE) AS DECIMAL(10,8)) AS [COBRE], "
    cQry += " CAST(SUM(SSTAB.PVC) AS DECIMAL(10,8)) AS [PVC] "
    cQry += " FROM ( "
    cQry += " SELECT  "
    cQry += " SG1.G1_COD AS [COD], "
    cQry += " RTRIM(LTRIM(SG1.G1_GROPC)) + RTRIM(LTRIM(SG1.G1_OPC)) AS [OPC], "
    cQry += " SG1.G1_COMP AS [COMP], "
    cQry += " SG1.G1_QUANT AS [QTD], "
    cQry += " (SG1.G1_QUANT * SB1.B1_PESCOB) AS [COBRE], "
    cQry += " CASE  "
    cQry += " 	WHEN SB1.B1_GRUPO IN ('MP04','MP03') "
    cQry += " 		THEN (SG1.G1_QUANT * 1) "
    cQry += " 	ELSE (SG1.G1_QUANT * SB1.B1_PESPVC)  "
    cQry += " END AS [PVC], "
    cQry += " SGA.GA_PADRAO AS [PADRAO] "
    cQry += " FROM SG1010 SG1 "
    cQry += " INNER JOIN SGA010 SGA ON SG1.G1_GROPC	= SGA.GA_GROPC "
    cQry += " 					  AND SG1.G1_OPC	= SGA.GA_OPC "
    cQry += " 					  AND SG1.D_E_L_E_T_= SGA.D_E_L_E_T_ "
    cQry += " INNER JOIN SB1010 SB1 ON SG1.G1_COMP = SB1.B1_COD AND SG1.D_E_L_E_T_ = SB1.D_E_L_E_T_ "
    cQry += " WHERE SG1.D_E_L_E_T_ = '' "
    cQry += " AND SG1.G1_GROPC <> '' "
    cQry += " UNION ALL "
    cQry += " SELECT  "
    cQry += " SSG1.G1_COD AS [COD], "
    cQry += " CASE "
    cQry += " 	WHEN (SUB.GRP IS NULL) OR (SUB.OPC IS NULL) "
    cQry += " 		THEN '0000000' "
    cQry += " 	ELSE RTRIM(LTRIM(SUB.GRP)) + RTRIM(LTRIM(SUB.OPC))  "
    cQry += " END AS [OPC], "
    cQry += " SSG1.G1_COMP AS [COMP], "
    cQry += " SSG1.G1_QUANT AS [QTD], "
    cQry += " (SSG1.G1_QUANT * SB1.B1_PESCOB) AS [COBRE], "
    cQry += " CASE  "
    cQry += " 	WHEN SB1.B1_GRUPO IN ('MP04','MP03') "
    cQry += " 		THEN (SSG1.G1_QUANT * 1) "
    cQry += " 	ELSE (SSG1.G1_QUANT * SB1.B1_PESPVC)  "
    cQry += " END AS [PVC], "
    cQry += " SUB.PADRAO AS [PADRAO] "
    cQry += " FROM SG1010 SSG1 "
    cQry += " LEFT JOIN ( "
    cQry += " 			SELECT SG1.G1_COD AS [COD], "
    cQry += " 			SG1.G1_GROPC AS [GRP],  "
    cQry += " 			SG1.G1_OPC AS [OPC], "
    cQry += " 			SGA.GA_PADRAO AS [PADRAO] "
    cQry += " 			FROM SG1010 SG1 "
    cQry += " 			LEFT JOIN SGA010 SGA ON SG1.G1_GROPC	= SGA.GA_GROPC "
    cQry += " 								  AND SG1.G1_OPC	= SGA.GA_OPC "
    cQry += " 								  AND SG1.D_E_L_E_T_= SGA.D_E_L_E_T_ "
    cQry += " 			WHERE SG1.D_E_L_E_T_ = '' "
    cQry += " 			AND SG1.G1_GROPC <> '' "
    cQry += " 			GROUP BY SG1.G1_COD, SG1.G1_GROPC, SG1.G1_OPC, SGA.GA_PADRAO "
    cQry += " ) AS SUB ON SUB.COD = SSG1.G1_COD "
    cQry += " INNER JOIN SB1010 SB1 ON SSG1.G1_COMP = SB1.B1_COD AND SSG1.D_E_L_E_T_ = SB1.D_E_L_E_T_ "
    cQry += " WHERE SSG1.G1_FILIAL = '' "
    cQry += " AND SSG1.D_E_L_E_T_ = '' "
    cQry += " AND SSG1.G1_GROPC = '' "
    cQry += " ) AS SSTAB "
    cQry += " GROUP BY SSTAB.COD, "
    cQry += " (CASE "
    cQry += " 	WHEN SSTAB.PADRAO = 'S' "
    cQry += " 		THEN '01' + SSTAB.OPC "
    cQry += " 	ELSE '99' + SSTAB.OPC "
    cQry += " END) "
    cQry += " ) AS TEMP  "
    cQry += " GROUP BY TEMP.COD "
    cQry += " ) AS STAB ON RTRIM(LTRIM(STAB.COD)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(TAB.PRODUTO)) COLLATE Latin1_General_BIN "
    cQry += " INNER JOIN SB1010 TSB1 ON RTRIM(LTRIM(TAB.PRODUTO)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(TSB1.B1_COD)) COLLATE Latin1_General_BIN AND '' = TSB1.D_E_L_E_T_ "
    cQry += " GROUP BY TAB.FILIAL,TAB.PRODUTO, STAB.MIN_COBRE, STAB.MED_COBRE, STAB.MAX_COBRE, TSB1.B1_PESCOB "
    cQry += " ORDER BY TAB.FILIAL,TAB.PRODUTO "
return(cQry)

static function qryOp(cDtIni, cDtFim, cProd)
    local cQry := ""

    cQry += " SELECT TAB.FILIAL AS [FILIAL], "
    cQry += " TAB.OP AS [OP], "
    cQry += " TAB.PRODUTO AS [PRODUTO], "
    cQry += " SUM(TAB.PROD_EST + TAB.PROD_MAN + TAB.PROD_UNDO) AS [PROD], "
    cQry += " SUM(TAB.REQ_EST + TAB.REQ_MAN + TAB.REQ_UNDO) AS [REQ], "
    cQry += " SUM(TAB.PROD_EST) AS [PROD_EST], "
    cQry += " SUM(TAB.REQ_EST) AS [REQ_EST], "
    cQry += " CASE  "
    cQry += " 	WHEN SUM(TAB.PROD_EST) > 0 "
    cQry += " 		THEN ROUND((SUM(TAB.REQ_EST) / SUM(TAB.PROD_EST)),4) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [FATOR_PLAN], "
    cQry += " SUM(TAB.PROD_MAN) AS [PROD_MAN], "
    cQry += " SUM(TAB.REQ_MAN) AS [REQ_MAN], "
    cQry += " SUM(TAB.PROD_UNDO) AS [PROD_UNDO], "
    cQry += " SUM(TAB.REQ_UNDO) AS [REQ_UNDO], "
    cQry += " CASE  "
    cQry += " 	WHEN SUM(TAB.PROD_EST + TAB.PROD_MAN) > 0 "
    cQry += " 		THEN ROUND((SUM(TAB.REQ_EST + TAB.REQ_MAN) / SUM(TAB.PROD_EST + TAB.PROD_MAN)),4) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [FATOR_EXEC], "
    cQry += " ISNULL(STAB.MIN_COBRE,0) AS [EST_MIN], "
    cQry += " ISNULL(STAB.MED_COBRE,0) AS [EST_MED], "
    cQry += " ISNULL(STAB.MAX_COBRE,0) AS [EST_MAX], "
    cQry += " TSB1.B1_PESCOB AS [CAD_FAT] "
    cQry += " FROM( "
    cQry += " SELECT TEMP.FILIAL AS [FILIAL], "
    cQry += " TEMP.OP AS [OP], "
    cQry += " TEMP.PROD_OP AS [PRODUTO], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID <> 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PROD_EST], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID = 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PROD_MAN], "
    cQry += " SUM(TEMP.UNDO_COBRE) AS [PROD_UNDO], "
    cQry += " 0 AS [REQ_EST], "
    cQry += " 0 AS [REQ_MAN], "
    cQry += " 0 AS [REQ_UNDO] "
    cQry += " FROM ( "
    cQry += " SELECT MOVUSER.IDCostCenter AS [FILIAL], "
    cQry += " MOVWO.Code AS [OP], "
    cQry += " OPPROD.Code AS [PROD_OP], "
    cQry += " CASE "
    cQry += " 	WHEN MOVTYPE.Code IN ('PR0') "
    cQry += " 		THEN MOVEV.IDLot "
    cQry += " 	WHEN MOVEV.TraceIDLot IS NOT NULL "
    cQry += " 		THEN MOVEV.TraceIDLot "
    cQry += " 	ELSE 0 "
    cQry += " END AS [ID], "
    cQry += " MOVPROD.Code AS [PROD], "
    cQry += " MOVTYPE.Code AS [MOV], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PVC], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.IDMovUn IS NOT NULL "
    cQry += " 		THEN MOVEV.IDMovUn "
    cQry += " 	ELSE ISNULL(( "
    cQry += " 			SELECT SMOVEV.IDMovUn "
    cQry += " 			FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SMOVEV "
    cQry += " 			INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType SMOVTYPE ON SMOVEV.IDMovType = SMOVTYPE.IDMovType "
    cQry += " 			WHERE SMOVEV.IDLot = MOVEV.IDLot "
    cQry += " 			AND SMOVTYPE.Code IN ('PR0','PR1','DE0','DE3') "
    cQry += " 			AND SMOVEV.IDMovUn IN ( "
    cQry += " 									SELECT MAX(SSMOVEV.IDMovUn) "
    cQry += " 									FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SSMOVEV "
    cQry += " 									WHERE SSMOVEV.IDLot = SMOVEV.IDLot "
    cQry += " 									AND SSMOVEV.TraceIDLot = MOVEV.TraceIDLot "
    cQry += " 									AND SSMOVEV.IDMovUn IS NOT NULL "
    cQry += " 									AND SSMOVEV.MovQty = MOVEV.MovQty "
    cQry += " 									AND RTRIM(LTRIM(SSMOVEV.AuxField1)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(MOVEV.AuxField1)) COLLATE Latin1_General_BIN "
    cQry += "  "
    cQry += " 			) "
    cQry += " 	),0) "
    cQry += " END AS [UNMOV],  "
    cQry += " MOVUSER.Name AS [USUARIO], "
    cQry += " MOVEV.UndoIDMovEv AS [UNDO], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " END AS [UNDO_QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " END AS [UNDO_COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " END AS [UNDO_PVC], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,112) AS [EMISSAO], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,108) AS [HREMISSAO] "
    cQry += " FROM [PCF_PROD].PCFactory.dbo.TBLMovEv MOVEV "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType MOVTYPE ON MOVEV.IDMovType = MOVTYPE.IDMovType "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLUser MOVUSER ON MOVEV.IDUser = MOVUSER.IDUser "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct MOVPROD ON MOVEV.IDProduct = MOVPROD.IDProduct "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLWOHD MOVWO ON MOVEV.IDWOHD = MOVWO.IDWOHD "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct OPPROD ON MOVWO.IDProduct = OPPROD.IDProduct "
    cQry += " LEFT JOIN  [PCF_PROD].PCFactory.dbo.TBLLot MOVLOT ON MOVEV.TraceIDLot = MOVLOT.IDLot "
    cQry += " INNER JOIN SB1010 SB1 WITH(NOLOCK) ON RTRIM(LTRIM(MOVPROD.Code)) = RTRIM(LTRIM(SB1.B1_COD)) COLLATE Latin1_General_BIN  AND '' = SB1.D_E_L_E_T_ "
    cQry += " WHERE Convert(nvarchar,MOVEV.DtTimeStamp,112) BETWEEN '" + cDtIni + "' AND '" + cDtFim + "' "
    cQry += " AND MOVUSER.IDCostCenter = " + CValToChar(Val(FwFilial()))
    cQry += " AND MOVTYPE.Code IN ('PR0','PR1') "
    cQry += " AND OPPROD.Code = '" + cProd + "' "
    cQry += " ) AS TEMP "
    cQry += " GROUP BY TEMP.FILIAL, TEMP.OP, TEMP.PROD_OP, TEMP.ID "
    cQry += " UNION ALL "
    cQry += " SELECT TEMP.FILIAL AS [FILIAL], "
    cQry += " TEMP.OP AS [OP], "
    cQry += " TEMP.PROD_OP AS [PRODUTO], "
    cQry += " 0 AS [PROD_EST], "
    cQry += " 0 AS [PROD_MAN], "
    cQry += " 0 AS [PROD_UNDO], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID <> 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [REQ_EST], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.ID = 0 "
    cQry += " 		THEN SUM(TEMP.COBRE) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [REQ_MAN], "
    cQry += " SUM(TEMP.UNDO_COBRE) AS [REQ_UNDO] "
    cQry += " FROM ( "
    cQry += " SELECT MOVUSER.IDCostCenter AS [FILIAL], "
    cQry += " MOVWO.Code AS [OP], "
    cQry += " OPPROD.Code AS [PROD_OP], "
    cQry += " CASE "
    cQry += " 	WHEN MOVTYPE.Code IN ('PR0') "
    cQry += " 		THEN MOVEV.IDLot "
    cQry += " 	WHEN MOVEV.TraceIDLot IS NOT NULL "
    cQry += " 		THEN MOVEV.TraceIDLot "
    cQry += " 	ELSE 0 "
    cQry += " END AS [ID], "
    cQry += " MOVPROD.Code AS [PROD], "
    cQry += " MOVTYPE.Code AS [MOV], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PVC], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.IDMovUn IS NOT NULL "
    cQry += " 		THEN MOVEV.IDMovUn "
    cQry += " 	ELSE ISNULL(( "
    cQry += " 			SELECT SMOVEV.IDMovUn "
    cQry += " 			FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SMOVEV "
    cQry += " 			INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType SMOVTYPE ON SMOVEV.IDMovType = SMOVTYPE.IDMovType "
    cQry += " 			WHERE SMOVEV.IDLot = MOVEV.IDLot "
    cQry += " 			AND SMOVTYPE.Code IN ('PR0','PR1','DE0','DE3') "
    cQry += " 			AND SMOVEV.IDMovUn IN ( "
    cQry += " 									SELECT MAX(SSMOVEV.IDMovUn) "
    cQry += " 									FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SSMOVEV "
    cQry += " 									WHERE SSMOVEV.IDLot = SMOVEV.IDLot "
    cQry += " 									AND SSMOVEV.TraceIDLot = MOVEV.TraceIDLot "
    cQry += " 									AND SSMOVEV.IDMovUn IS NOT NULL "
    cQry += " 									AND SSMOVEV.MovQty = MOVEV.MovQty "
    cQry += " 									AND RTRIM(LTRIM(SSMOVEV.AuxField1)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(MOVEV.AuxField1)) COLLATE Latin1_General_BIN "
    cQry += "  "
    cQry += " 			) "
    cQry += " 	),0) "
    cQry += " END AS [UNMOV],  "
    cQry += " MOVUSER.Name AS [USUARIO], "
    cQry += " MOVEV.UndoIDMovEv AS [UNDO], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " END AS [UNDO_QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " END AS [UNDO_COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " END AS [UNDO_PVC], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,112) AS [EMISSAO], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,108) AS [HREMISSAO] "
    cQry += " FROM [PCF_PROD].PCFactory.dbo.TBLMovEv MOVEV "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType MOVTYPE ON MOVEV.IDMovType = MOVTYPE.IDMovType "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLUser MOVUSER ON MOVEV.IDUser = MOVUSER.IDUser "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct MOVPROD ON MOVEV.IDProduct = MOVPROD.IDProduct "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLWOHD MOVWO ON MOVEV.IDWOHD = MOVWO.IDWOHD "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct OPPROD ON MOVWO.IDProduct = OPPROD.IDProduct "
    cQry += " LEFT JOIN  [PCF_PROD].PCFactory.dbo.TBLLot MOVLOT ON MOVEV.TraceIDLot = MOVLOT.IDLot "
    cQry += " INNER JOIN SB1010 SB1 WITH(NOLOCK) ON RTRIM(LTRIM(MOVPROD.Code)) = RTRIM(LTRIM(SB1.B1_COD)) COLLATE Latin1_General_BIN  AND '' = SB1.D_E_L_E_T_ "
    cQry += " WHERE Convert(nvarchar,MOVEV.DtTimeStamp,112) BETWEEN '" + cDtIni + "' AND '" + cDtFim + "' "
    cQry += " AND MOVUSER.IDCostCenter = " + CValToChar(Val(FwFilial()))
    cQry += " AND MOVTYPE.Code IN ('RE0','RE1') "
    cQry += " AND OPPROD.Code = '" + cProd + "' "
    cQry += " ) AS TEMP "
    cQry += " GROUP BY TEMP.FILIAL, TEMP.OP, TEMP.PROD_OP, TEMP.ID "
    cQry += " ) AS TAB "
    cQry += " LEFT JOIN ( "
    cQry += " SELECT  "
    cQry += " TEMP.COD AS [COD], "
    cQry += " MIN(TEMP.COBRE) AS [MIN_COBRE], "
    cQry += " AVG(TEMP.COBRE) AS [MED_COBRE], "
    cQry += " MAX(TEMP.COBRE) AS [MAX_COBRE], "
    cQry += " MIN(TEMP.PVC) AS [MIN_PVC], "
    cQry += " AVG(TEMP.PVC) AS [MED_PVC], "
    cQry += " MAX(TEMP.PVC) AS [MAX_PVC] "
    cQry += " FROM ( "
    cQry += " SELECT  "
    cQry += " SSTAB.COD AS [COD], "
    cQry += " CASE "
    cQry += " 	WHEN SSTAB.PADRAO = 'S' "
    cQry += " 		THEN '01' + SSTAB.OPC "
    cQry += " 	ELSE '99' + SSTAB.OPC "
    cQry += " END AS [ORDEM], "
    cQry += " CAST(SUM(SSTAB.QTD) AS DECIMAL(10,8)) AS [QTD], "
    cQry += " CAST(SUM(SSTAB.COBRE) AS DECIMAL(10,8)) AS [COBRE], "
    cQry += " CAST(SUM(SSTAB.PVC) AS DECIMAL(10,8)) AS [PVC] "
    cQry += " FROM ( "
    cQry += " SELECT  "
    cQry += " SG1.G1_COD AS [COD], "
    cQry += " RTRIM(LTRIM(SG1.G1_GROPC)) + RTRIM(LTRIM(SG1.G1_OPC)) AS [OPC], "
    cQry += " SG1.G1_COMP AS [COMP], "
    cQry += " SG1.G1_QUANT AS [QTD], "
    cQry += " (SG1.G1_QUANT * SB1.B1_PESCOB) AS [COBRE], "
    cQry += " CASE  "
    cQry += " 	WHEN SB1.B1_GRUPO IN ('MP04','MP03') "
    cQry += " 		THEN (SG1.G1_QUANT * 1) "
    cQry += " 	ELSE (SG1.G1_QUANT * SB1.B1_PESPVC)  "
    cQry += " END AS [PVC], "
    cQry += " SGA.GA_PADRAO AS [PADRAO] "
    cQry += " FROM SG1010 SG1 "
    cQry += " INNER JOIN SGA010 SGA ON SG1.G1_GROPC	= SGA.GA_GROPC "
    cQry += " 					  AND SG1.G1_OPC	= SGA.GA_OPC "
    cQry += " 					  AND SG1.D_E_L_E_T_= SGA.D_E_L_E_T_ "
    cQry += " INNER JOIN SB1010 SB1 ON SG1.G1_COMP = SB1.B1_COD AND SG1.D_E_L_E_T_ = SB1.D_E_L_E_T_ "
    cQry += " WHERE SG1.D_E_L_E_T_ = '' "
    cQry += " AND SG1.G1_GROPC <> '' "
    cQry += " UNION ALL "
    cQry += " SELECT  "
    cQry += " SSG1.G1_COD AS [COD], "
    cQry += " CASE "
    cQry += " 	WHEN (SUB.GRP IS NULL) OR (SUB.OPC IS NULL) "
    cQry += " 		THEN '0000000' "
    cQry += " 	ELSE RTRIM(LTRIM(SUB.GRP)) + RTRIM(LTRIM(SUB.OPC))  "
    cQry += " END AS [OPC], "
    cQry += " SSG1.G1_COMP AS [COMP], "
    cQry += " SSG1.G1_QUANT AS [QTD], "
    cQry += " (SSG1.G1_QUANT * SB1.B1_PESCOB) AS [COBRE], "
    cQry += " CASE  "
    cQry += " 	WHEN SB1.B1_GRUPO IN ('MP04','MP03') "
    cQry += " 		THEN (SSG1.G1_QUANT * 1) "
    cQry += " 	ELSE (SSG1.G1_QUANT * SB1.B1_PESPVC)  "
    cQry += " END AS [PVC], "
    cQry += " SUB.PADRAO AS [PADRAO] "
    cQry += " FROM SG1010 SSG1 "
    cQry += " LEFT JOIN ( "
    cQry += " 			SELECT SG1.G1_COD AS [COD], "
    cQry += " 			SG1.G1_GROPC AS [GRP],  "
    cQry += " 			SG1.G1_OPC AS [OPC], "
    cQry += " 			SGA.GA_PADRAO AS [PADRAO] "
    cQry += " 			FROM SG1010 SG1 "
    cQry += " 			LEFT JOIN SGA010 SGA ON SG1.G1_GROPC	= SGA.GA_GROPC "
    cQry += " 								  AND SG1.G1_OPC	= SGA.GA_OPC "
    cQry += " 								  AND SG1.D_E_L_E_T_= SGA.D_E_L_E_T_ "
    cQry += " 			WHERE SG1.D_E_L_E_T_ = '' "
    cQry += " 			AND SG1.G1_GROPC <> '' "
    cQry += " 			GROUP BY SG1.G1_COD, SG1.G1_GROPC, SG1.G1_OPC, SGA.GA_PADRAO "
    cQry += " ) AS SUB ON SUB.COD = SSG1.G1_COD "
    cQry += " INNER JOIN SB1010 SB1 ON SSG1.G1_COMP = SB1.B1_COD AND SSG1.D_E_L_E_T_ = SB1.D_E_L_E_T_ "
    cQry += " WHERE SSG1.G1_FILIAL = '' "
    cQry += " AND SSG1.D_E_L_E_T_ = '' "
    cQry += " AND SSG1.G1_GROPC = '' "
    cQry += " ) AS SSTAB "
    cQry += " GROUP BY SSTAB.COD, "
    cQry += " (CASE "
    cQry += " 	WHEN SSTAB.PADRAO = 'S' "
    cQry += " 		THEN '01' + SSTAB.OPC "
    cQry += " 	ELSE '99' + SSTAB.OPC "
    cQry += " END) "
    cQry += " ) AS TEMP  "
    cQry += " GROUP BY TEMP.COD "
    cQry += " ) AS STAB ON RTRIM(LTRIM(STAB.COD)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(TAB.PRODUTO)) COLLATE Latin1_General_BIN "
    cQry += " INNER JOIN SB1010 TSB1 ON RTRIM(LTRIM(TAB.PRODUTO)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(TSB1.B1_COD)) COLLATE Latin1_General_BIN AND '' = TSB1.D_E_L_E_T_ "
    cQry += " GROUP BY TAB.FILIAL,TAB.OP,TAB.PRODUTO, STAB.MIN_COBRE, STAB.MED_COBRE, STAB.MAX_COBRE, TSB1.B1_PESCOB "
    cQry += " ORDER BY TAB.FILIAL,TAB.PRODUTO, TAB.OP "
return(cQry)

static function qryDetalhe(cDtIni, cDtFim, cOP)
    local cQry := ""

    cQry += " SELECT TEMP.FILIAL AS [FILIAL], "
    cQry += " TEMP.OP AS [OP], "
    cQry += " TEMP.PROD_OP AS [PRODOP], "
    cQry += " TEMP.UNMOV AS [UNIMOV], "
    cQry += " TEMP.PROD AS [PRODUTO], "
    cQry += " TEMP.MOV AS [MVTO], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.MOV IN ('PR0','PR1') "
    cQry += " 		THEN TEMP.QTD "
    cQry += " 	ELSE (TEMP.QTD * -1) "
    cQry += " END AS [QTD], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.MOV IN ('PR0','PR1') "
    cQry += " 		THEN TEMP.COBRE "
    cQry += " 	ELSE (TEMP.COBRE * -1) "
    cQry += " END AS [COBRE], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.MOV IN ('PR0','PR1') "
    cQry += " 		THEN TEMP.PVC "
    cQry += " 	ELSE (TEMP.PVC * -1) "
    cQry += " END AS [PVC], "
    cQry += " ISNULL(TEMP.UNDO,'') AS [UNDO], "
    cQry += " TEMP.USUARIO AS [USUAR], "
    cQry += " TEMP.EMISSAO AS [EMISS], "
    cQry += " TEMP.HREMISSAO AS [HREMISS] "
    cQry += " FROM ( "
    cQry += " SELECT MOVUSER.IDCostCenter AS [FILIAL], "
    cQry += " MOVWO.Code AS [OP], "
    cQry += " OPPROD.Code AS [PROD_OP], "
    cQry += " CASE "
    cQry += " 	WHEN MOVTYPE.Code IN ('PR0') "
    cQry += " 		THEN MOVEV.IDLot "
    cQry += " 	WHEN MOVEV.TraceIDLot IS NOT NULL "
    cQry += " 		THEN MOVEV.TraceIDLot "
    cQry += " 	ELSE 0 "
    cQry += " END AS [ID], "
    cQry += " MOVPROD.Code AS [PROD], "
    cQry += " MOVTYPE.Code AS [MOV], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PVC], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.IDMovUn IS NOT NULL "
    cQry += " 		THEN MOVEV.IDMovUn "
    cQry += " 	ELSE ISNULL(( "
    cQry += " 			SELECT SMOVEV.IDMovUn "
    cQry += " 			FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SMOVEV "
    cQry += " 			INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType SMOVTYPE ON SMOVEV.IDMovType = SMOVTYPE.IDMovType "
    cQry += " 			WHERE SMOVEV.IDLot = MOVEV.IDLot "
    cQry += " 			AND SMOVTYPE.Code IN ('PR0','PR1','DE0','DE3') "
    cQry += " 			AND SMOVEV.IDMovUn IN ( "
    cQry += " 									SELECT MAX(SSMOVEV.IDMovUn) "
    cQry += " 									FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SSMOVEV "
    cQry += " 									WHERE SSMOVEV.IDLot = SMOVEV.IDLot "
    cQry += " 									AND SSMOVEV.TraceIDLot = MOVEV.TraceIDLot "
    cQry += " 									AND SSMOVEV.IDMovUn IS NOT NULL "
    cQry += " 									AND SSMOVEV.MovQty = MOVEV.MovQty "
    cQry += " 									AND RTRIM(LTRIM(SSMOVEV.AuxField1)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(MOVEV.AuxField1)) COLLATE Latin1_General_BIN "
    cQry += "  "
    cQry += " 			) "
    cQry += " 	),0) "
    cQry += " END AS [UNMOV],  "
    cQry += " MOVUSER.Name AS [USUARIO], "
    cQry += " MOVEV.UndoIDMovEv AS [UNDO], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " END AS [UNDO_QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " END AS [UNDO_COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " END AS [UNDO_PVC], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,112) AS [EMISSAO], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,108) AS [HREMISSAO] "
    cQry += " FROM [PCF_PROD].PCFactory.dbo.TBLMovEv MOVEV "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType MOVTYPE ON MOVEV.IDMovType = MOVTYPE.IDMovType "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLUser MOVUSER ON MOVEV.IDUser = MOVUSER.IDUser "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct MOVPROD ON MOVEV.IDProduct = MOVPROD.IDProduct "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLWOHD MOVWO ON MOVEV.IDWOHD = MOVWO.IDWOHD "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct OPPROD ON MOVWO.IDProduct = OPPROD.IDProduct "
    cQry += " LEFT JOIN  [PCF_PROD].PCFactory.dbo.TBLLot MOVLOT ON MOVEV.TraceIDLot = MOVLOT.IDLot "
    cQry += " INNER JOIN SB1010 SB1 WITH(NOLOCK) ON RTRIM(LTRIM(MOVPROD.Code)) = RTRIM(LTRIM(SB1.B1_COD)) COLLATE Latin1_General_BIN  AND '' = SB1.D_E_L_E_T_ "
    cQry += " WHERE Convert(nvarchar,MOVEV.DtTimeStamp,112) BETWEEN '" + cDtIni + "' AND '" + cDtFim + "' "
    cQry += " AND MOVUSER.IDCostCenter = " + CValToChar(Val(FwFilial()))
    cQry += " AND MOVWO.Code = '" + cOP + "' "
    cQry += " AND MOVTYPE.Code IN ('PR0','PR1') "
    cQry += " ) AS TEMP "
    cQry += " UNION ALL "
    cQry += " SELECT TEMP.FILIAL AS [FILIAL], "
    cQry += " TEMP.OP AS [OP], "
    cQry += " TEMP.PROD_OP AS [PRODUTO_OP], "
    cQry += " TEMP.UNMOV AS [UNIMOV], "
    cQry += " TEMP.PROD AS [PRODUTO], "
    cQry += " TEMP.MOV AS [MOVTO], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.MOV IN ('PR0','PR1') "
    cQry += " 		THEN TEMP.QTD "
    cQry += " 	ELSE (TEMP.QTD * -1) "
    cQry += " END AS [QTD], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.MOV IN ('PR0','PR1') "
    cQry += " 		THEN TEMP.COBRE "
    cQry += " 	ELSE (TEMP.COBRE * -1) "
    cQry += " END AS [COBRE], "
    cQry += " CASE  "
    cQry += " 	WHEN TEMP.MOV IN ('PR0','PR1') "
    cQry += " 		THEN TEMP.PVC "
    cQry += " 	ELSE (TEMP.PVC * -1) "
    cQry += " END AS [PVC], "
    cQry += " ISNULL(TEMP.UNDO,'') AS [UNDO], "
    cQry += " TEMP.USUARIO AS [USUARIO], "
    cQry += " TEMP.EMISSAO AS [EMISSAO], "
    cQry += " TEMP.HREMISSAO AS [HREMISSAO] "
    cQry += " FROM ( "
    cQry += " SELECT MOVUSER.IDCostCenter AS [FILIAL], "
    cQry += " MOVWO.Code AS [OP], "
    cQry += " OPPROD.Code AS [PROD_OP], "
    cQry += " CASE "
    cQry += " 	WHEN MOVTYPE.Code IN ('PR0') "
    cQry += " 		THEN MOVEV.IDLot "
    cQry += " 	WHEN MOVEV.TraceIDLot IS NOT NULL "
    cQry += " 		THEN MOVEV.TraceIDLot "
    cQry += " 	ELSE 0 "
    cQry += " END AS [ID], "
    cQry += " MOVPROD.Code AS [PROD], "
    cQry += " MOVTYPE.Code AS [MOV], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " 	ELSE 0 "
    cQry += " END AS [PVC], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.IDMovUn IS NOT NULL "
    cQry += " 		THEN MOVEV.IDMovUn "
    cQry += " 	ELSE ISNULL(( "
    cQry += " 			SELECT SMOVEV.IDMovUn "
    cQry += " 			FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SMOVEV "
    cQry += " 			INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType SMOVTYPE ON SMOVEV.IDMovType = SMOVTYPE.IDMovType "
    cQry += " 			WHERE SMOVEV.IDLot = MOVEV.IDLot "
    cQry += " 			AND SMOVTYPE.Code IN ('PR0','PR1','DE0','DE3') "
    cQry += " 			AND SMOVEV.IDMovUn IN ( "
    cQry += " 									SELECT MAX(SSMOVEV.IDMovUn) "
    cQry += " 									FROM [PCF_PROD].PCFactory.dbo.TBLMovEv SSMOVEV "
    cQry += " 									WHERE SSMOVEV.IDLot = SMOVEV.IDLot "
    cQry += " 									AND SSMOVEV.TraceIDLot = MOVEV.TraceIDLot "
    cQry += " 									AND SSMOVEV.IDMovUn IS NOT NULL "
    cQry += " 									AND SSMOVEV.MovQty = MOVEV.MovQty "
    cQry += " 									AND RTRIM(LTRIM(SSMOVEV.AuxField1)) COLLATE Latin1_General_BIN = RTRIM(LTRIM(MOVEV.AuxField1)) COLLATE Latin1_General_BIN "
    cQry += "  "
    cQry += " 			) "
    cQry += " 	),0) "
    cQry += " END AS [UNMOV],  "
    cQry += " MOVUSER.Name AS [USUARIO], "
    cQry += " MOVEV.UndoIDMovEv AS [UNDO], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE CAST(MOVEV.MovQty AS FLOAT) "
    cQry += " END AS [UNDO_QTD], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESCOB) "
    cQry += " END AS [UNDO_COBRE], "
    cQry += " CASE "
    cQry += " 	WHEN MOVEV.UndoIDMovEv IS NULL "
    cQry += " 		THEN 0 "
    cQry += " 	ELSE (MOVEV.MovQty * SB1.B1_PESPVC) "
    cQry += " END AS [UNDO_PVC], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,112) AS [EMISSAO], "
    cQry += " Convert(nvarchar,MOVEV.DtTimeStamp,108) AS [HREMISSAO] "
    cQry += " FROM [PCF_PROD].PCFactory.dbo.TBLMovEv MOVEV "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLMovType MOVTYPE ON MOVEV.IDMovType = MOVTYPE.IDMovType "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLUser MOVUSER ON MOVEV.IDUser = MOVUSER.IDUser "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct MOVPROD ON MOVEV.IDProduct = MOVPROD.IDProduct "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLWOHD MOVWO ON MOVEV.IDWOHD = MOVWO.IDWOHD "
    cQry += " INNER JOIN [PCF_PROD].PCFactory.dbo.TBLProduct OPPROD ON MOVWO.IDProduct = OPPROD.IDProduct "
    cQry += " LEFT JOIN  [PCF_PROD].PCFactory.dbo.TBLLot MOVLOT ON MOVEV.TraceIDLot = MOVLOT.IDLot "
    cQry += " INNER JOIN SB1010 SB1 WITH(NOLOCK) ON RTRIM(LTRIM(MOVPROD.Code)) = RTRIM(LTRIM(SB1.B1_COD)) COLLATE Latin1_General_BIN  AND '' = SB1.D_E_L_E_T_ "
    cQry += " WHERE Convert(nvarchar,MOVEV.DtTimeStamp,112) BETWEEN '" + cDtIni + "' AND '" + cDtFim + "' "
    cQry += " AND MOVUSER.IDCostCenter = " + CValToChar(Val(FwFilial()))
    cQry += " AND MOVWO.Code = '" + cOP + "' "
    cQry += " AND MOVTYPE.Code IN ('RE0','RE1') "
    cQry += " ) AS TEMP "
return(cQry)
